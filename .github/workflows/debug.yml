name: debug

on:
  workflow_dispatch:
  push:
    branches: ['master']

jobs:
  build:
    env:
      projName: V2RayGCon
      projCfg: Release
      net45SdkUrl: 'https://vrnobody.github.io/V2RayGCon/images/releases/dotnetf45.zip'
      sysSdkPath: 'C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework'

    runs-on: windows-2025

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Show versions
        run: |
          python --version
          echo "power shell version:"
          $Host.Version

      - name: Export env test
        run: |
          echo "hello=world" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Show value of env
        run: |
          echo "1. hello = $hello"
          echo "2. hello = ${hello}"
          echo "3. hello = ${ env.hello }"
          echo "4. hello = ${{ env.hello }}"

      - name: Install .net framework 4.5 SDK
        shell: pwsh
        run: |
          echo "download ${env:net45SdkUrl}"
          Invoke-WebRequest -Uri "${env:net45SdkUrl}" -OutFile "dotnetfw45sdk.zip"
          echo "unzip to: ${env:sysSdkPath}"
          Expand-Archive -Force -LiteralPath "dotnetfw45sdk.zip" -DestinationPath "${env:sysSdkPath}"

      - name: Setup .net framework env
        uses: vrnobody/Setup-DotNetFrameworkEnv@v1.20

      - name: Restore packages
        run: nuget restore ${env:projName}.sln

      - name: Build with MSBuild
        run: msbuild ${env:projName}.sln -p:Configuration=${env:projCfg}

      - name: Run unit tests
        run: |
          function Invoke-VSTest {
            & "vstest.console.exe" $args
            if(-not $?){ throw "fail!" }
          }
          Invoke-VSTest "V2RayGConTests\bin\${{ env.projCfg }}\V2RayGCon.Test.dll"
          Invoke-VSTest "VgcApisTests\bin\${{ env.projCfg }}\VgcApisTests.dll"
          Invoke-VSTest "Plugins\ProxySetterTests\bin\${{ env.projCfg }}\ProxySetterTests.dll"
          Invoke-VSTest "Plugins\NeoLunaTests\bin\${{ env.projCfg }}\NeoLunaTests.dll"

      - name: All done!
        run: echo "All done!"

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProxySetter.Resources.Langs {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class I18N {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal I18N() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ProxySetter.Resources.Langs.I18N", typeof(I18N).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 Discard unsaved changes and close this window? 的本地化字符串。
        /// </summary>
        internal static string ConfirmCloseWinWithoutSave {
            get {
                return ResourceManager.GetString("ConfirmCloseWinWithoutSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Copy fail! 的本地化字符串。
        /// </summary>
        internal static string CopyFail {
            get {
                return ResourceManager.GetString("CopyFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Copied to clipboard. 的本地化字符串。
        /// </summary>
        internal static string CopySuccess {
            get {
                return ResourceManager.GetString("CopySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Auto update system proxy setting. 的本地化字符串。
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Detect route config failed! 的本地化字符串。
        /// </summary>
        internal static string DetectRouteConfigFailed {
            get {
                return ResourceManager.GetString("DetectRouteConfigFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Done. 的本地化字符串。
        /// </summary>
        internal static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Exe file not found!
        ///{0} 的本地化字符串。
        /// </summary>
        internal static string ExeNotFound {
            get {
                return ResourceManager.GetString("ExeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Failed! 的本地化字符串。
        /// </summary>
        internal static string Failed {
            get {
                return ResourceManager.GetString("Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Global proxy require http server! 的本地化字符串。
        /// </summary>
        internal static string GlobalProxyRequireHttpServer {
            get {
                return ResourceManager.GetString("GlobalProxyRequireHttpServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Launch notepad fail! 的本地化字符串。
        /// </summary>
        internal static string LaunchNotepadFail {
            get {
                return ResourceManager.GetString("LaunchNotepadFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Direct 的本地化字符串。
        /// </summary>
        internal static string MiDirect {
            get {
                return ResourceManager.GetString("MiDirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 System 的本地化字符串。
        /// </summary>
        internal static string MiGlobal {
            get {
                return ResourceManager.GetString("MiGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Manual 的本地化字符串。
        /// </summary>
        internal static string MiNone {
            get {
                return ResourceManager.GetString("MiNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 PAC 的本地化字符串。
        /// </summary>
        internal static string MiPAC {
            get {
                return ResourceManager.GetString("MiPAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 No server capable to be system proxy. 的本地化字符串。
        /// </summary>
        internal static string NoServerCapableOfSysProxy {
            get {
                return ResourceManager.GetString("NoServerCapableOfSysProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Options 的本地化字符串。
        /// </summary>
        internal static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 PAC proxy require socks or http server. 的本地化字符串。
        /// </summary>
        internal static string PacProxyRequireSocksOrHttpServer {
            get {
                return ResourceManager.GetString("PacProxyRequireSocksOrHttpServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 PAC server is not running. 的本地化字符串。
        /// </summary>
        internal static string PacServerIsOff {
            get {
                return ResourceManager.GetString("PacServerIsOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 PAC server is running. 的本地化字符串。
        /// </summary>
        internal static string PacServerIsOn {
            get {
                return ResourceManager.GetString("PacServerIsOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Try to parse hotkey fail!
        ///Please check hotkey settings in ProxySetter plug-in. 的本地化字符串。
        /// </summary>
        internal static string ParseKeyCodeFail {
            get {
                return ResourceManager.GetString("ParseKeyCodeFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Please config Tuna in option window of this plug-in.
        ///And then click generate-button. 的本地化字符串。
        /// </summary>
        internal static string PleaseConfigTunaFirst {
            get {
                return ResourceManager.GetString("PleaseConfigTunaFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Register hot key success! 的本地化字符串。
        /// </summary>
        internal static string RegHotKeySuccess {
            get {
                return ResourceManager.GetString("RegHotKeySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Try to regist global hotkey fail!
        ///Please make sure hotkey is not taken by other application. 的本地化字符串。
        /// </summary>
        internal static string RegistHotkeyFail {
            get {
                return ResourceManager.GetString("RegistHotkeyFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Set as system proxy. 的本地化字符串。
        /// </summary>
        internal static string SetAsSysProxy {
            get {
                return ResourceManager.GetString("SetAsSysProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Start PAC server fail. 
        ///Please check port setting. 的本地化字符串。
        /// </summary>
        internal static string StartPacServFail {
            get {
                return ResourceManager.GetString("StartPacServFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Current system proxy is pointing to  的本地化字符串。
        /// </summary>
        internal static string SysProxyChangeTo {
            get {
                return ResourceManager.GetString("SysProxyChangeTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 System proxy settings remain the same. 的本地化字符串。
        /// </summary>
        internal static string SystemProxySettingRemain {
            get {
                return ResourceManager.GetString("SystemProxySettingRemain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 System proxy setting updated. 的本地化字符串。
        /// </summary>
        internal static string SystemProxySettingUpdated {
            get {
                return ResourceManager.GetString("SystemProxySettingUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Tuna is running. 的本地化字符串。
        /// </summary>
        internal static string TunaIsRunning {
            get {
                return ResourceManager.GetString("TunaIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Tuna starts. 的本地化字符串。
        /// </summary>
        internal static string TunaStarts {
            get {
                return ResourceManager.GetString("TunaStarts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Tuna stopped. 的本地化字符串。
        /// </summary>
        internal static string TunaStopped {
            get {
                return ResourceManager.GetString("TunaStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Unregister hot key {0} 的本地化字符串。
        /// </summary>
        internal static string UnregisterHotKey {
            get {
                return ResourceManager.GetString("UnregisterHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 In order to use Tuna, you have to download these two binaries:
        ///https://www.wintun.net/
        ///https://github.com/xjasonlyu/tun2socks
        ///Please read the online manual first. (simple chinese)
        ///
        ///This plug-in use the following project as the default PAC source.
        ///https://github.com/txthinking/blackwhite
        ///https://github.com/Loyalsoldier/v2ray-rules-dat
        ///
        ///You can modify the default PAC in tab “setting” as follows.
        ///
        ///// this is a comment
        ///
        ///
        ///// add domain or IP or CIDR
        ///
        ///example.com
        ///192.168.1.1
        ///
        ///192.168.1.0/24
        ///
        ///
        /////  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string UsageReadme {
            get {
                return ResourceManager.GetString("UsageReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Visit PAC debugger webpage? 的本地化字符串。
        /// </summary>
        internal static string VisitPacDebugger {
            get {
                return ResourceManager.GetString("VisitPacDebugger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Write file fail! 的本地化字符串。
        /// </summary>
        internal static string WriteFileFail {
            get {
                return ResourceManager.GetString("WriteFileFail", resourceCulture);
            }
        }
    }
}
